{"ast":null,"code":"var _jsxFileName = \"/Users/sarojdahal/Desktop/React JS/day15/src/TodoList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useReducer } from \"react\";\nimport { Form, Container, Button, Alert, Row, Col } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { FaPlus, FaTrash } from \"react-icons/fa\";\nimport todoReducer from \"./reducers/todoReducer\";\nimport TODO_ACTIONS from \"./actions/todoAction\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TodoList = () => {\n  _s();\n\n  const intialData = JSON.parse(localStorage.getItem(\"todos\"));\n  const [text, setText] = useState(\"\");\n  const [state, dispatch] = useReducer(todoReducer, [...intialData]); //Format:\n  // [\n  //   {\n  //     data: \"todo \",\n  //     date: \" current date\"\n  //     isCompleted:\"true/false\"\n  //   }\n  // ]\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"mt-3 text-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"TodoList App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n      type: \"text\",\n      value: text,\n      onChange: e => setText(e.target.value),\n      onKeyPress: e => e.key === \"Enter\" && dispatch({\n        type: TODO_ACTIONS.ADD_TODO\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => dispatch({\n        type: TODO_ACTIONS.ADD_TODO\n      }),\n      children: [/*#__PURE__*/_jsxDEV(FaPlus, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"ms-2\",\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), state.length > 0 ? state.map((todo, index) => {\n      return /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          xs: 10,\n          children: /*#__PURE__*/_jsxDEV(Alert, {\n            variant: todo.isCompleted ? \"danger\" : \"primary\",\n            className: \"text-start\",\n            style: {\n              cursor: \"pointer\",\n              textDecoration: todo.isCompleted ? \"line-through\" : \"none\"\n            },\n            onClick: () => dispatch({\n              type: TODO_ACTIONS.TOGGLE_TODO,\n              payloads: {\n                index: index\n              }\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: todo.data\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              children: todo.date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          className: \"mt-4\",\n          children: /*#__PURE__*/_jsxDEV(FaTrash, {\n            size: \"40\",\n            color: \"red\",\n            onClick: () => dispatch({\n              type: TODO_ACTIONS.DELETE_TODO,\n              payloads: {\n                index: index\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 15\n      }, this);\n    }) : \"No todos\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TodoList, \"y0qr0IJmN66BNzca+2FSw6Zr79U=\");\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["/Users/sarojdahal/Desktop/React JS/day15/src/TodoList.js"],"names":["React","useState","useReducer","Form","Container","Button","Alert","Row","Col","FaPlus","FaTrash","todoReducer","TODO_ACTIONS","TodoList","intialData","JSON","parse","localStorage","getItem","text","setText","state","dispatch","e","target","value","key","type","ADD_TODO","length","map","todo","index","isCompleted","cursor","textDecoration","TOGGLE_TODO","payloads","data","date","DELETE_TODO"],"mappings":"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","sourcesContent":["import React, { useState, useReducer } from \"react\";\nimport { Form, Container, Button, Alert, Row, Col } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { FaPlus, FaTrash } from \"react-icons/fa\";\nimport todoReducer from \"./reducers/todoReducer\";\nimport TODO_ACTIONS from \"./actions/todoAction\";\n\nconst TodoList = () => {\n  const intialData = JSON.parse(localStorage.getItem(\"todos\"));\n  const [text, setText] = useState(\"\");\n\n  const [state, dispatch] = useReducer(todoReducer, [...intialData]);\n  //Format:\n  // [\n\n  //   {\n  //     data: \"todo \",\n  //     date: \" current date\"\n  //     isCompleted:\"true/false\"\n  //   }\n  // ]\n\n  return (\n    <Container className=\"mt-3 text-center\">\n      <h3>TodoList App</h3>\n      <Form.Control\n        type=\"text\"\n        value={text}\n        onChange={(e) => setText(e.target.value)}\n        onKeyPress={(e) =>\n          e.key === \"Enter\" && dispatch({ type: TODO_ACTIONS.ADD_TODO })\n        }\n      />\n\n      <br />\n\n      <Button onClick={() => dispatch({ type: TODO_ACTIONS.ADD_TODO })}>\n        <FaPlus />\n        <label className=\"ms-2\">Add</label>\n      </Button>\n\n      <br />\n      <br />\n\n      {state.length > 0\n        ? state.map((todo, index) => {\n            return (\n              <Row>\n                <Col xs={10}>\n                  <Alert\n                    variant={todo.isCompleted ? \"danger\" : \"primary\"}\n                    className=\"text-start\"\n                    style={{\n                      cursor: \"pointer\",\n                      textDecoration: todo.isCompleted\n                        ? \"line-through\"\n                        : \"none\",\n                    }}\n                    onClick={() =>\n                      dispatch({\n                        type: TODO_ACTIONS.TOGGLE_TODO,\n                        payloads: { index: index },\n                      })\n                    }\n                  >\n                    <h3>{todo.data}</h3>\n\n                    <small>{todo.date}</small>\n                  </Alert>\n                </Col>\n\n                <Col className=\"mt-4\">\n                  <FaTrash\n                    size=\"40\"\n                    color=\"red\"\n                    onClick={() =>\n                      dispatch({\n                        type: TODO_ACTIONS.DELETE_TODO,\n                        payloads: { index: index },\n                      })\n                    }\n                  />\n                </Col>\n              </Row>\n            );\n          })\n        : \"No todos\"}\n    </Container>\n  );\n};\n\nexport default TodoList;\n"]},"metadata":{},"sourceType":"module"}