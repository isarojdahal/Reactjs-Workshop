{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst useFetch = (url, _ref) => {\n  _s();\n\n  let {\n    method\n  } = _ref;\n  const [fetchedData, setFetchedData] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  let p;\n\n  switch (method) {\n    case \"GET\":\n      p = axios.get(url);\n      break;\n\n    case \"POST\":\n      p = axios.post(url);\n      break;\n\n    case \"DELETE\":\n      p = axios.delete(url);\n      break;\n\n    default:\n      p = axios.get(url);\n  }\n\n  useEffect(() => {\n    p.then(response => {\n      setFetchedData(response.data);\n      setIsLoading(false);\n    }).catch(err => setError(err));\n  }, []);\n  return [isLoading, fetchedData, error];\n};\n\n_s(useFetch, \"tc+wwEZlcllnUK26vxKTTHbMtqE=\");\n\nexport default useFetch;","map":{"version":3,"sources":["/Users/sarojdahal/Desktop/React JS/custom-hooks-in-react/src/hooks/useFetch.js"],"names":["React","useState","useEffect","axios","useFetch","url","method","fetchedData","setFetchedData","isLoading","setIsLoading","error","setError","p","get","post","delete","then","response","data","catch","err"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,QAAQ,GAAG,CAACC,GAAD,WAAqB;AAAA;;AAAA,MAAf;AAAEC,IAAAA;AAAF,GAAe;AACpC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;AAEA,MAAIY,CAAJ;;AAEA,UAAQP,MAAR;AACE,SAAK,KAAL;AACEO,MAAAA,CAAC,GAAGV,KAAK,CAACW,GAAN,CAAUT,GAAV,CAAJ;AACA;;AACF,SAAK,MAAL;AACEQ,MAAAA,CAAC,GAAGV,KAAK,CAACY,IAAN,CAAWV,GAAX,CAAJ;AACA;;AACF,SAAK,QAAL;AACEQ,MAAAA,CAAC,GAAGV,KAAK,CAACa,MAAN,CAAaX,GAAb,CAAJ;AACA;;AACF;AACEQ,MAAAA,CAAC,GAAGV,KAAK,CAACW,GAAN,CAAUT,GAAV,CAAJ;AAXJ;;AAcAH,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,CAAC,CAACI,IAAF,CAAQC,QAAD,IAAc;AACnBV,MAAAA,cAAc,CAACU,QAAQ,CAACC,IAAV,CAAd;AACAT,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAHD,EAGGU,KAHH,CAGUC,GAAD,IAAST,QAAQ,CAACS,GAAD,CAH1B;AAID,GALQ,EAKN,EALM,CAAT;AAMA,SAAO,CAACZ,SAAD,EAAYF,WAAZ,EAAyBI,KAAzB,CAAP;AACD,CA5BD;;GAAMP,Q;;AA8BN,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst useFetch = (url, { method }) => {\n  const [fetchedData, setFetchedData] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n\n  let p;\n\n  switch (method) {\n    case \"GET\":\n      p = axios.get(url);\n      break;\n    case \"POST\":\n      p = axios.post(url);\n      break;\n    case \"DELETE\":\n      p = axios.delete(url);\n      break;\n    default:\n      p = axios.get(url);\n  }\n\n  useEffect(() => {\n    p.then((response) => {\n      setFetchedData(response.data);\n      setIsLoading(false);\n    }).catch((err) => setError(err));\n  }, []);\n  return [isLoading, fetchedData, error];\n};\n\nexport default useFetch;\n"]},"metadata":{},"sourceType":"module"}